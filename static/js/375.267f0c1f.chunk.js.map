{"version":3,"file":"static/js/375.267f0c1f.chunk.js","mappings":"+SACaA,EAAe,mCAC5BC,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAe,kCAEfC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjBX,EAAAA,EAAAA,IAAU,SAADY,OAAUL,EAAO,mBAAmB,CAClEM,OAAQ,CACNC,QAASf,KAEV,KAAD,EAJY,OAARS,EAAQC,EAAAM,KAAAN,EAAAO,OAAA,SAKPR,EAASS,MAAI,aAAAR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEd,IAAIU,MAAM,wCAAmC,KAAD,oBAAAV,EAAAW,OAAA,GAAAd,EAAA,kBAErD,gBAX2Be,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAYfC,EAAc,eAAAC,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqB,EAAMnB,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAEhBX,EAAAA,EAAAA,IAAU,sCAADY,OACQL,EAAO,YAC7C,CACEM,OAAQ,CACNC,QAASf,KAGb,KAAD,EAPa,OAARS,EAAQmB,EAAAZ,KAAAY,EAAAX,OAAA,SAQPR,EAASS,KAAKW,MAAI,aAAAD,EAAAjB,KAAA,EAAAiB,EAAAT,GAAAS,EAAA,SAEnB,IAAIR,MAAM,wCAAmC,KAAD,oBAAAQ,EAAAP,OAAA,GAAAM,EAAA,kBAErD,gBAd0BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAedO,EAAU,eAAAC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2B,EAAMzB,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEZX,EAAAA,EAAAA,IAAU,sCAADY,OACQL,EAAO,2BAC7C,CACEM,OAAQ,CACNC,QAASf,KAGb,KAAD,EAPa,OAARS,EAAQyB,EAAAlB,KAAAkB,EAAAjB,OAAA,SASPR,EAASS,MAAI,aAAAgB,EAAAvB,KAAA,EAAAuB,EAAAf,GAAAe,EAAA,SAEd,IAAId,MAAM,wCAAmC,KAAD,oBAAAc,EAAAb,OAAA,GAAAY,EAAA,kBAErD,gBAfsBE,GAAA,OAAAH,EAAAT,MAAA,KAAAC,UAAA,I,kLC9BVY,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMvBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAOtBG,EAAWL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8BAInBK,EAAUP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mDAKlBO,EAAQT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mDAKhBS,EAAkBX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+DAM5BW,EAAkBb,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uDAK5Ba,EAAgBf,EAAAA,GAAAA,EAAQgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mDAKxBe,EAAajB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,gD,SCoCpC,EAlEqB,WAAO,IAADiB,EAAAC,EACjBjD,GAAYkD,EAAAA,EAAAA,MAAZlD,QACRmD,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAmC,QAAvBjB,EAAiB,QAAjBC,GADDiB,EAAAA,EAAAA,MACaC,aAAK,IAAAlB,OAAA,EAAdA,EAAgBmB,YAAI,IAAApB,EAAAA,EAAI,IAkB7C,OAhBAqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAA1E,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAW,EAAA,OAAAZ,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACP,OAAjBwD,GAAW,GAAM1D,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIT,EAAAA,EAAAA,IAAgBK,GAAS,KAAD,EAArCU,EAAIR,EAAAM,KACVgD,EAAS9C,GAAMR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEf8D,EAAS9D,EAAAS,GAAM4D,SAAS,QAEN,OAFMrE,EAAAC,KAAA,GAExByD,GAAW,GAAO1D,EAAAsE,OAAA,6BAAAtE,EAAAW,OAAA,GAAAd,EAAA,wBAErB,kBAVsB,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAYvBsD,GACF,GAAG,CAACtE,IAEA2D,GAAgBc,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eACnBX,GAAcU,EAAAA,EAAAA,KAAA,KAAAC,SAAIX,KAGpBY,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAC7B,EAAU,CAAA4B,SAAA,EACTD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAIZ,EAAaS,SAAC,mBACvBnB,IACCoB,EAAAA,EAAAA,MAACnC,EAAe,CAAAkC,SAAA,CACbnB,EAAMuB,cACLL,EAAAA,EAAAA,KAAC7C,EAAU,CACTmD,IAAG,GAAA1E,OAAKX,EAAAA,IAAYW,OAAGkD,EAAMuB,aAC7BE,IAAG,GAAA3E,OAAKkD,EAAM0B,MAAK,cAGvBN,EAAAA,EAAAA,MAACjC,EAAe,CAAAgC,SAAA,EACdD,EAAAA,EAAAA,KAACzC,EAAU,CAAA0C,SAAEnB,EAAM0B,SACnBR,EAAAA,EAAAA,KAAA,SACAE,EAAAA,EAAAA,MAACzC,EAAQ,CAAAwC,SAAA,CAAC,aAAWnB,EAAM2B,aAC3BP,EAAAA,EAAAA,MAACvC,EAAO,CAAAsC,SAAA,CAAC,iBAAenB,EAAM4B,iBAC9BR,EAAAA,EAAAA,MAACrC,EAAK,CAAAoC,SAAA,CAAC,UAAQnB,EAAM6B,0BAK7BT,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAC7B,EAAa,CAAA8B,SAAC,2BACfC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,kBAIvBD,EAAAA,EAAAA,KAACY,EAAAA,GAAM,SAIf,C","sources":["components/API/Api.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nexport const API_KEY_TMDB = '19b9b4f97f8432efbb5601f05c8bb5a9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const imageBaseUrl = 'https://image.tmdb.org/t/p/w200';\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n      params: {\n        api_key: API_KEY_TMDB,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Eroare! Informații inexistente!');\n  }\n};\nexport const getCastDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY_TMDB,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw new Error('Eroare! Informații inexistente!');\n  }\n};\nexport const getReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`,\n      {\n        params: {\n          api_key: API_KEY_TMDB,\n        },\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    throw new Error('Eroare! Informații inexistente!');\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieImage = styled.img`\n  width: 240px;\n  height: 380px;\n  border-radius: 8px;\n`;\n\nexport const MovieTitle = styled.h1`\n  align-self: center;\n  font-weight: 700;\n  font-size: 40px;\n  color: darkgreen;\n`;\n\nexport const Overwiew = styled.p`\n  color: darkblue;\n`;\n\nexport const Release = styled.p`\n  color: darkblue;\n  font-weight: 500;\n`;\n\nexport const Score = styled.p`\n  color: darkblue;\n  font-weight: 500;\n`;\n\nexport const MovieDetailsDiv = styled.div`\n  margin-top: 10px;\n  display: flex;\n  gap: 24px;\n`;\n\nexport const SpecificDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AditionalInfo = styled.p`\n  color: darkblue;\n  font-weight: 700;\n`;\n\nexport const DetailsDiv = styled.div`\n  display: wrap;\n  flex-wrap: wrap;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails, imageBaseUrl } from '../API/Api';\nimport {\n  MovieDetailsDiv,\n  MovieImage,\n  SpecificDetails,\n  MovieTitle,\n  Overwiew,\n  Release,\n  Score,\n  AditionalInfo,\n  DetailsDiv,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div>\n      <DetailsDiv>\n        <Link to={backLinkHref}>Back to search</Link>\n        {movie && (\n          <MovieDetailsDiv>\n            {movie.poster_path && (\n              <MovieImage\n                src={`${imageBaseUrl}${movie.poster_path}`}\n                alt={`${movie.title} poster`}\n              />\n            )}\n            <SpecificDetails>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <p></p>\n              <Overwiew>Overview: {movie.overview}</Overwiew>\n              <Release>Release Date: {movie.release_date}</Release>\n              <Score>Score: {movie.vote_average}</Score>\n            </SpecificDetails>\n          </MovieDetailsDiv>\n        )}\n      </DetailsDiv>\n      <div>\n        <AditionalInfo>Aditional information</AditionalInfo>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY_TMDB","axios","imageBaseUrl","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","concat","params","api_key","sent","abrupt","data","t0","Error","stop","_x","apply","arguments","getCastDetails","_ref2","_callee2","_context2","cast","_x2","getReviews","_ref3","_callee3","_context3","_x3","MovieImage","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","Overwiew","_templateObject3","Release","_templateObject4","Score","_templateObject5","MovieDetailsDiv","_templateObject6","SpecificDetails","_templateObject7","AditionalInfo","_templateObject8","DetailsDiv","_templateObject9","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","message","finish","_jsx","children","_jsxs","Link","to","poster_path","src","alt","title","overview","release_date","vote_average","Outlet"],"sourceRoot":""}